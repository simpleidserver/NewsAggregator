// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsAggregator.EF;

namespace NewsAggregator.ML.Startup.Migrations
{
    [DbContext(typeof(NewsAggregatorDBContext))]
    [Migration("20210329145947_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewsAggregator.Domain.Articles.ArticleAggregate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("PublishDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("NewsAggregator.Domain.RSSFeeds.RSSFeedAggregate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RSSFeeds");
                });

            modelBuilder.Entity("NewsAggregator.Domain.RSSFeeds.RSSFeedExtractionHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("LastArticlePublicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NbExtractedArticle")
                        .HasColumnType("int");

                    b.Property<string>("RSSFeedAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RSSFeedAggregateId");

                    b.ToTable("RSSFeedExtractionHistory");
                });

            modelBuilder.Entity("NewsAggregator.Domain.RSSFeeds.RSSFeedExtractionHistory", b =>
                {
                    b.HasOne("NewsAggregator.Domain.RSSFeeds.RSSFeedAggregate", null)
                        .WithMany("ExtractionHistories")
                        .HasForeignKey("RSSFeedAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NewsAggregator.Domain.RSSFeeds.RSSFeedAggregate", b =>
                {
                    b.Navigation("ExtractionHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
